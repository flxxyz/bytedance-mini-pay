"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var crypto=require("crypto"),fetch=require("node-fetch");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var fetch__default=_interopDefaultLegacy(fetch);class TTPay{API_URL="https://developer.toutiao.com/api/apps/ecpay/v1";constructor(e){if(!e.appId)throw Error("config.appId is required");if(!e.appSecret)throw Error("config.appSecret is required");if(!e.SALT)throw Error("config.SALT is required");e.notifyURL,this.config=Object.assign({TOKEN:""},e)}_genSign(e){const t=["app_id","thirdparty_id","sign"],r=[];for(var i in e)-1==t.indexOf(i)&&r.push(e[i]);return r.push(this.config.SALT),crypto.createHash("md5").update(r.sort().join("&")).digest("hex")}async _request(e,t={}){if(!e)throw Error("method is not found");t={method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json","User-Agent":"flxxyz/bytedance-mini-pay"}};return fetch__default.default(`${this.API_URL}${e}`,t).then(e=>e.json())}async createOrder(e,t,r,i,n={}){n.valid_time||(n.valid_time=1800);const o={app_id:this.config.appId,out_order_no:e,total_amount:t,subject:r,body:i,...n};this.config.notifyURL||(o.notify_url=this.config.notifyURL);n={...o,sign:this._genSign({...o})};return this._request("/create_order",n)}async queryOrder(e,t={}){t={app_id:this.config.appId,out_order_no:e,...t},t={...t,sign:this._genSign({...t})};return this._request("/query_order",t)}async createRefund(e,t,r,i,n={}){const o={app_id:this.config.appId,out_order_no:e,out_refund_no:t,refund_amount:r,reason:i,...n};this.config.notifyURL&&(o.notify_url=this.config.notifyURL);n={...o,sign:this._genSign({...o})};return this._request("/create_refund",n)}async queryRefund(e,t={}){t={app_id:this.config.appId,out_refund_no:e,...t},t={...t,sign:this._genSign({...t})};return this._request("/query_refund",t)}checkNotifySign(e={}){const{msg_signature:t,timestamp:r,msg:i="",nonce:n}=e;e=[this.config.TOKEN,r,n,i].sort().join();return t===crypto.createHash("sha1").update(e).digest("hex")}ackNotify=(e=()=>{})=>e('{"err_no":0,"err_tips":"success"}')}exports.TTPay=TTPay;
