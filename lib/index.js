"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var crypto=require("crypto"),fetch=require("node-fetch");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var fetch__default=_interopDefaultLegacy(fetch);class TTPay{API_URL="https://developer.toutiao.com/api/apps/ecpay/v1";skipArr=["app_id","thirdparty_id","sign"];config={appId:"",appSecret:"",mchId:"",SALT:"",TOKEN:"",notifyURL:""};constructor(e){if(!e.appId)throw Error("config.appId is required");if(!e.appSecret)throw Error("config.appSecret is required");if(!e.SALT)throw Error("config.SALT is required");this.config={TOKEN:"",...e}}_genSign(e){const t=[];for(const r in e)-1===this.skipArr.indexOf(r)&&t.push(e[r]);return t.push(this.config.SALT),crypto.createHash("md5").update(t.sort().join("&")).digest("hex")}async _request(e,t={}){if(!e)throw Error("uri is not found");t={method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json","User-Agent":"flxxyz/bytedance-mini-pay"}};return await fetch__default.default(`${this.API_URL}${e}`,t).then(e=>e.json())}_genParams(e,t={}){const r={app_id:this.config.appId,...t};return"create"===e&&(t.notifyURL||this.config.notifyURL)&&(r.notify_url=this.config.notifyURL),Object.entries(r).forEach(([e,t])=>{""===t&&delete r[e]}),{...r,sign:this._genSign({...r})}}createOrder(e,t,r,i,o={}){o.valid_time||(o.valid_time=1800);o=this._genParams("create",{out_order_no:e,total_amount:t,subject:r,body:i,...o});return this._request("/create_order",o)}queryOrder(e,t={}){t=this._genParams("query",{out_order_no:e,...t});return this._request("/query_order",t)}createRefund(e,t,r,i,o={}){o=this._genParams("create",{out_order_no:e,out_refund_no:t,refund_amount:r,reason:i,...o});return this._request("/create_refund",o)}queryRefund(e,t={}){t=this._genParams("create",{out_refund_no:e,...t});return this._request("/query_refund",t)}checkNotifySign(e={}){const{msg_signature:t="",timestamp:r="",msg:i="",nonce:o=""}=e;e=[this.config.TOKEN,r,o,i].sort().join("");return t===crypto.createHash("sha1").update(e).digest("hex")}ackNotify=(e=()=>{})=>e('{"err_no":0,"err_tips":"success"}')}exports.TTPay=TTPay,exports.default=TTPay;
